package appModule;
import java.io.File;
import java.io.FileInputStream;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
//import OpenQA.Selenium.Support.UI;







//import pageObjects.Home_Page;
import pageObjects.Login_Page;
import utility.ExcelUtils;
import utility.Log;

public class SignIn_Action 
{
	//driverFF = new FirefoxDriver();
	public static void Execute(WebDriver driverFF) throws Exception
	{
	
			 
      //  Home_Page.lnk_MyAccount(driver).click();
		for (int i=0; i< ReadDataFrmXL.xRows; i++)
        {
        String vUser = LoginData[i][0];
        String vPassword = LoginData[i][1];
        driverFF.FindElement(By.id("txtLogin").cl);
        driverFF.FindElement(By.id("txtLogin").sendKeys(vUser);

        		
		String sUserName = ExcelUtils.getCellData(1, 1);
		 
		Log.info("Username picked from Excel is "+ sUserName );

		String sPassword = ExcelUtils.getCellData(1, 2);

		Log.info("Password picked from Excel is "+ sPassword );

	//	Home_Page.lnk_MyAccount(driver).click();

		Log.info("Click action performed on My Account link");

		Login_Page.txtbx_UserName(driverFF).sendKeys(sUserName);

		Log.info("Username entered in the Username text box");

		Login_Page.txtbx_Password(driverFF).sendKeys(sPassword);

		Log.info("Password entered in the Password text box");

		Login_Page.btn_LogIn(driverFF).click();

		Log.info("Click action performed on Submit button");
     }
	}
	public class ReadDataFrmXL 
        {
            static int intxRows;
            static int intxCols;
            public static String[][] readData(String fPath, intsheetNum) throws Exception
            {
                File file = new File(fPath);
                FileInputStreamfIP = new FileInputStream(file);
                HSSFWorkbookwb = new HSSFWorkbook(fIP);
                HSSFSheet sheet = wb.getSheetAt(sheetNum);
                xRows = sheet.getLastRowNum()+1;
                System.out.println("Rows are :"+ xRows);
                xCols = sheet.getRow(0).getLastCellNum();
                    System.out.println("Columns are : " + xCols);
                String[][] xData = new String[xRows][xCols];
                for(inti=0; i<xRows; i++){
                HSSFRow row = sheet.getRow(i);
                for(int j=0; j<xCols; j++){
                HSSFCell cell = row.getCell(j);
                String value= CellToString(cell);
                xData[i][j] = value;
                System.out.println(value);
                //System.out.print("##");
            }
            //System.out.println("@");
        }
        return xData;
     }
    public static String CellToString(HSSFCell cell) 
    {
        int type = cell.getCellType();
        Object result = null;
        switch(type){
        case HSSFCell.CELL_TYPE_BLANK:
        result = "";
        //System.out.println("Blank Value");
        break;
        case HSSFCell.CELL_TYPE_BOOLEAN:
        result = cell.getBooleanCellValue();
        //System.out.println(result);
        break;
        case HSSFCell.CELL_TYPE_ERROR:
        //System.out.println("There is some error.");
        throw new RuntimeException("Error");
        case HSSFCell.CELL_TYPE_FORMULA:
        throw new RuntimeException("Formula can not be eveluated.");
        case HSSFCell.CELL_TYPE_NUMERIC:
        result = cell.getNumericCellValue();
        //System.out.println(result);
        break;
        case HSSFCell.CELL_TYPE_STRING:
        System.out.println(result);
        result = cell.getStringCellValue();
        //System.out.println(result);
        break;
        default:
        System.out.println("Out of world.");
                throw new RuntimeException("Out of world.");
    }
        return result.toString();
        
}
    }
	}
